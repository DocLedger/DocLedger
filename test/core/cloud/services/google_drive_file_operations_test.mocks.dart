// Mocks generated by Mockito 5.4.6 from annotations
// in doc_ledger/test/core/cloud/services/google_drive_file_operations_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:_discoveryapis_commons/_discoveryapis_commons.dart' as _i10;
import 'package:flutter/foundation.dart' as _i9;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i3;
import 'package:google_sign_in/google_sign_in.dart' as _i2;
import 'package:google_sign_in_platform_interface/google_sign_in_platform_interface.dart'
    as _i6;
import 'package:googleapis/drive/v3.dart' as _i4;
import 'package:googleapis/shared.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGoogleSignInAuthentication_0 extends _i1.SmartFake
    implements _i2.GoogleSignInAuthentication {
  _FakeGoogleSignInAuthentication_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIOSOptions_1 extends _i1.SmartFake implements _i3.IOSOptions {
  _FakeIOSOptions_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAndroidOptions_2 extends _i1.SmartFake
    implements _i3.AndroidOptions {
  _FakeAndroidOptions_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLinuxOptions_3 extends _i1.SmartFake implements _i3.LinuxOptions {
  _FakeLinuxOptions_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWindowsOptions_4 extends _i1.SmartFake
    implements _i3.WindowsOptions {
  _FakeWindowsOptions_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWebOptions_5 extends _i1.SmartFake implements _i3.WebOptions {
  _FakeWebOptions_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMacOsOptions_6 extends _i1.SmartFake implements _i3.MacOsOptions {
  _FakeMacOsOptions_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAboutResource_7 extends _i1.SmartFake implements _i4.AboutResource {
  _FakeAboutResource_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppsResource_8 extends _i1.SmartFake implements _i4.AppsResource {
  _FakeAppsResource_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeChangesResource_9 extends _i1.SmartFake
    implements _i4.ChangesResource {
  _FakeChangesResource_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeChannelsResource_10 extends _i1.SmartFake
    implements _i4.ChannelsResource {
  _FakeChannelsResource_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCommentsResource_11 extends _i1.SmartFake
    implements _i4.CommentsResource {
  _FakeCommentsResource_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDrivesResource_12 extends _i1.SmartFake
    implements _i4.DrivesResource {
  _FakeDrivesResource_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFilesResource_13 extends _i1.SmartFake implements _i4.FilesResource {
  _FakeFilesResource_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePermissionsResource_14 extends _i1.SmartFake
    implements _i4.PermissionsResource {
  _FakePermissionsResource_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRepliesResource_15 extends _i1.SmartFake
    implements _i4.RepliesResource {
  _FakeRepliesResource_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRevisionsResource_16 extends _i1.SmartFake
    implements _i4.RevisionsResource {
  _FakeRevisionsResource_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTeamdrivesResource_17 extends _i1.SmartFake
    implements _i4.TeamdrivesResource {
  _FakeTeamdrivesResource_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFile_18 extends _i1.SmartFake implements _i4.File {
  _FakeFile_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGeneratedIds_19 extends _i1.SmartFake implements _i4.GeneratedIds {
  _FakeGeneratedIds_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeObject_20 extends _i1.SmartFake implements Object {
  _FakeObject_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFileList_21 extends _i1.SmartFake implements _i4.FileList {
  _FakeFileList_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLabelList_22 extends _i1.SmartFake implements _i4.LabelList {
  _FakeLabelList_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeModifyLabelsResponse_23 extends _i1.SmartFake
    implements _i4.ModifyLabelsResponse {
  _FakeModifyLabelsResponse_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$Channel01_24 extends _i1.SmartFake implements _i5.$Channel01 {
  _Fake$Channel01_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GoogleSignIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignIn extends _i1.Mock implements _i2.GoogleSignIn {
  MockGoogleSignIn() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SignInOption get signInOption =>
      (super.noSuchMethod(
            Invocation.getter(#signInOption),
            returnValue: _i6.SignInOption.standard,
          )
          as _i6.SignInOption);

  @override
  List<String> get scopes =>
      (super.noSuchMethod(Invocation.getter(#scopes), returnValue: <String>[])
          as List<String>);

  @override
  bool get forceCodeForRefreshToken =>
      (super.noSuchMethod(
            Invocation.getter(#forceCodeForRefreshToken),
            returnValue: false,
          )
          as bool);

  @override
  _i7.Stream<_i2.GoogleSignInAccount?> get onCurrentUserChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onCurrentUserChanged),
            returnValue: _i7.Stream<_i2.GoogleSignInAccount?>.empty(),
          )
          as _i7.Stream<_i2.GoogleSignInAccount?>);

  @override
  _i7.Future<_i2.GoogleSignInAccount?> signInSilently({
    bool? suppressErrors = true,
    bool? reAuthenticate = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInSilently, [], {
              #suppressErrors: suppressErrors,
              #reAuthenticate: reAuthenticate,
            }),
            returnValue: _i7.Future<_i2.GoogleSignInAccount?>.value(),
          )
          as _i7.Future<_i2.GoogleSignInAccount?>);

  @override
  _i7.Future<bool> isSignedIn() =>
      (super.noSuchMethod(
            Invocation.method(#isSignedIn, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<_i2.GoogleSignInAccount?> signIn() =>
      (super.noSuchMethod(
            Invocation.method(#signIn, []),
            returnValue: _i7.Future<_i2.GoogleSignInAccount?>.value(),
          )
          as _i7.Future<_i2.GoogleSignInAccount?>);

  @override
  _i7.Future<_i2.GoogleSignInAccount?> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i7.Future<_i2.GoogleSignInAccount?>.value(),
          )
          as _i7.Future<_i2.GoogleSignInAccount?>);

  @override
  _i7.Future<_i2.GoogleSignInAccount?> disconnect() =>
      (super.noSuchMethod(
            Invocation.method(#disconnect, []),
            returnValue: _i7.Future<_i2.GoogleSignInAccount?>.value(),
          )
          as _i7.Future<_i2.GoogleSignInAccount?>);

  @override
  _i7.Future<bool> requestScopes(List<String>? scopes) =>
      (super.noSuchMethod(
            Invocation.method(#requestScopes, [scopes]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> canAccessScopes(
    List<String>? scopes, {
    String? accessToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #canAccessScopes,
              [scopes],
              {#accessToken: accessToken},
            ),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);
}

/// A class which mocks [GoogleSignInAccount].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockGoogleSignInAccount extends _i1.Mock
    implements _i2.GoogleSignInAccount {
  MockGoogleSignInAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get email =>
      (super.noSuchMethod(
            Invocation.getter(#email),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.getter(#email),
            ),
          )
          as String);

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i8.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  _i7.Future<_i2.GoogleSignInAuthentication> get authentication =>
      (super.noSuchMethod(
            Invocation.getter(#authentication),
            returnValue: _i7.Future<_i2.GoogleSignInAuthentication>.value(
              _FakeGoogleSignInAuthentication_0(
                this,
                Invocation.getter(#authentication),
              ),
            ),
          )
          as _i7.Future<_i2.GoogleSignInAuthentication>);

  @override
  _i7.Future<Map<String, String>> get authHeaders =>
      (super.noSuchMethod(
            Invocation.getter(#authHeaders),
            returnValue: _i7.Future<Map<String, String>>.value(
              <String, String>{},
            ),
          )
          as _i7.Future<Map<String, String>>);

  @override
  _i7.Future<void> clearAuthCache() =>
      (super.noSuchMethod(
            Invocation.method(#clearAuthCache, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}

/// A class which mocks [GoogleSignInAuthentication].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInAuthentication extends _i1.Mock
    implements _i2.GoogleSignInAuthentication {
  MockGoogleSignInAuthentication() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i3.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.IOSOptions get iOptions =>
      (super.noSuchMethod(
            Invocation.getter(#iOptions),
            returnValue: _FakeIOSOptions_1(this, Invocation.getter(#iOptions)),
          )
          as _i3.IOSOptions);

  @override
  _i3.AndroidOptions get aOptions =>
      (super.noSuchMethod(
            Invocation.getter(#aOptions),
            returnValue: _FakeAndroidOptions_2(
              this,
              Invocation.getter(#aOptions),
            ),
          )
          as _i3.AndroidOptions);

  @override
  _i3.LinuxOptions get lOptions =>
      (super.noSuchMethod(
            Invocation.getter(#lOptions),
            returnValue: _FakeLinuxOptions_3(
              this,
              Invocation.getter(#lOptions),
            ),
          )
          as _i3.LinuxOptions);

  @override
  _i3.WindowsOptions get wOptions =>
      (super.noSuchMethod(
            Invocation.getter(#wOptions),
            returnValue: _FakeWindowsOptions_4(
              this,
              Invocation.getter(#wOptions),
            ),
          )
          as _i3.WindowsOptions);

  @override
  _i3.WebOptions get webOptions =>
      (super.noSuchMethod(
            Invocation.getter(#webOptions),
            returnValue: _FakeWebOptions_5(
              this,
              Invocation.getter(#webOptions),
            ),
          )
          as _i3.WebOptions);

  @override
  _i3.MacOsOptions get mOptions =>
      (super.noSuchMethod(
            Invocation.getter(#mOptions),
            returnValue: _FakeMacOsOptions_6(
              this,
              Invocation.getter(#mOptions),
            ),
          )
          as _i3.MacOsOptions);

  @override
  void registerListener({
    required String? key,
    required _i9.ValueChanged<String?>? listener,
  }) => super.noSuchMethod(
    Invocation.method(#registerListener, [], {#key: key, #listener: listener}),
    returnValueForMissingStub: null,
  );

  @override
  void unregisterListener({
    required String? key,
    required _i9.ValueChanged<String?>? listener,
  }) => super.noSuchMethod(
    Invocation.method(#unregisterListener, [], {
      #key: key,
      #listener: listener,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void unregisterAllListenersForKey({required String? key}) =>
      super.noSuchMethod(
        Invocation.method(#unregisterAllListenersForKey, [], {#key: key}),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListeners() => super.noSuchMethod(
    Invocation.method(#unregisterAllListeners, []),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<void> write({
    required String? key,
    required String? value,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#write, [], {
              #key: key,
              #value: value,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<String?> read({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#read, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i7.Future<String?>.value(),
          )
          as _i7.Future<String?>);

  @override
  _i7.Future<bool> containsKey({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<void> delete({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<Map<String, String>> readAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readAll, [], {
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i7.Future<Map<String, String>>.value(
              <String, String>{},
            ),
          )
          as _i7.Future<Map<String, String>>);

  @override
  _i7.Future<void> deleteAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAll, [], {
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<bool?> isCupertinoProtectedDataAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isCupertinoProtectedDataAvailable, []),
            returnValue: _i7.Future<bool?>.value(),
          )
          as _i7.Future<bool?>);
}

/// A class which mocks [DriveApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockDriveApi extends _i1.Mock implements _i4.DriveApi {
  MockDriveApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.AboutResource get about =>
      (super.noSuchMethod(
            Invocation.getter(#about),
            returnValue: _FakeAboutResource_7(this, Invocation.getter(#about)),
          )
          as _i4.AboutResource);

  @override
  _i4.AppsResource get apps =>
      (super.noSuchMethod(
            Invocation.getter(#apps),
            returnValue: _FakeAppsResource_8(this, Invocation.getter(#apps)),
          )
          as _i4.AppsResource);

  @override
  _i4.ChangesResource get changes =>
      (super.noSuchMethod(
            Invocation.getter(#changes),
            returnValue: _FakeChangesResource_9(
              this,
              Invocation.getter(#changes),
            ),
          )
          as _i4.ChangesResource);

  @override
  _i4.ChannelsResource get channels =>
      (super.noSuchMethod(
            Invocation.getter(#channels),
            returnValue: _FakeChannelsResource_10(
              this,
              Invocation.getter(#channels),
            ),
          )
          as _i4.ChannelsResource);

  @override
  _i4.CommentsResource get comments =>
      (super.noSuchMethod(
            Invocation.getter(#comments),
            returnValue: _FakeCommentsResource_11(
              this,
              Invocation.getter(#comments),
            ),
          )
          as _i4.CommentsResource);

  @override
  _i4.DrivesResource get drives =>
      (super.noSuchMethod(
            Invocation.getter(#drives),
            returnValue: _FakeDrivesResource_12(
              this,
              Invocation.getter(#drives),
            ),
          )
          as _i4.DrivesResource);

  @override
  _i4.FilesResource get files =>
      (super.noSuchMethod(
            Invocation.getter(#files),
            returnValue: _FakeFilesResource_13(this, Invocation.getter(#files)),
          )
          as _i4.FilesResource);

  @override
  _i4.PermissionsResource get permissions =>
      (super.noSuchMethod(
            Invocation.getter(#permissions),
            returnValue: _FakePermissionsResource_14(
              this,
              Invocation.getter(#permissions),
            ),
          )
          as _i4.PermissionsResource);

  @override
  _i4.RepliesResource get replies =>
      (super.noSuchMethod(
            Invocation.getter(#replies),
            returnValue: _FakeRepliesResource_15(
              this,
              Invocation.getter(#replies),
            ),
          )
          as _i4.RepliesResource);

  @override
  _i4.RevisionsResource get revisions =>
      (super.noSuchMethod(
            Invocation.getter(#revisions),
            returnValue: _FakeRevisionsResource_16(
              this,
              Invocation.getter(#revisions),
            ),
          )
          as _i4.RevisionsResource);

  @override
  _i4.TeamdrivesResource get teamdrives =>
      (super.noSuchMethod(
            Invocation.getter(#teamdrives),
            returnValue: _FakeTeamdrivesResource_17(
              this,
              Invocation.getter(#teamdrives),
            ),
          )
          as _i4.TeamdrivesResource);
}

/// A class which mocks [FilesResource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFilesResource extends _i1.Mock implements _i4.FilesResource {
  MockFilesResource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i4.File> copy(
    _i4.File? request,
    String? fileId, {
    bool? enforceSingleParent,
    bool? ignoreDefaultVisibility,
    String? includeLabels,
    String? includePermissionsForView,
    bool? keepRevisionForever,
    String? ocrLanguage,
    bool? supportsAllDrives,
    bool? supportsTeamDrives,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #copy,
              [request, fileId],
              {
                #enforceSingleParent: enforceSingleParent,
                #ignoreDefaultVisibility: ignoreDefaultVisibility,
                #includeLabels: includeLabels,
                #includePermissionsForView: includePermissionsForView,
                #keepRevisionForever: keepRevisionForever,
                #ocrLanguage: ocrLanguage,
                #supportsAllDrives: supportsAllDrives,
                #supportsTeamDrives: supportsTeamDrives,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<_i4.File>.value(
              _FakeFile_18(
                this,
                Invocation.method(
                  #copy,
                  [request, fileId],
                  {
                    #enforceSingleParent: enforceSingleParent,
                    #ignoreDefaultVisibility: ignoreDefaultVisibility,
                    #includeLabels: includeLabels,
                    #includePermissionsForView: includePermissionsForView,
                    #keepRevisionForever: keepRevisionForever,
                    #ocrLanguage: ocrLanguage,
                    #supportsAllDrives: supportsAllDrives,
                    #supportsTeamDrives: supportsTeamDrives,
                    #$fields: $fields,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i4.File>);

  @override
  _i7.Future<_i4.File> create(
    _i4.File? request, {
    bool? enforceSingleParent,
    bool? ignoreDefaultVisibility,
    String? includeLabels,
    String? includePermissionsForView,
    bool? keepRevisionForever,
    String? ocrLanguage,
    bool? supportsAllDrives,
    bool? supportsTeamDrives,
    bool? useContentAsIndexableText,
    String? $fields,
    _i10.UploadOptions? uploadOptions = _i10.UploadOptions.defaultOptions,
    _i10.Media? uploadMedia,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #create,
              [request],
              {
                #enforceSingleParent: enforceSingleParent,
                #ignoreDefaultVisibility: ignoreDefaultVisibility,
                #includeLabels: includeLabels,
                #includePermissionsForView: includePermissionsForView,
                #keepRevisionForever: keepRevisionForever,
                #ocrLanguage: ocrLanguage,
                #supportsAllDrives: supportsAllDrives,
                #supportsTeamDrives: supportsTeamDrives,
                #useContentAsIndexableText: useContentAsIndexableText,
                #$fields: $fields,
                #uploadOptions: uploadOptions,
                #uploadMedia: uploadMedia,
              },
            ),
            returnValue: _i7.Future<_i4.File>.value(
              _FakeFile_18(
                this,
                Invocation.method(
                  #create,
                  [request],
                  {
                    #enforceSingleParent: enforceSingleParent,
                    #ignoreDefaultVisibility: ignoreDefaultVisibility,
                    #includeLabels: includeLabels,
                    #includePermissionsForView: includePermissionsForView,
                    #keepRevisionForever: keepRevisionForever,
                    #ocrLanguage: ocrLanguage,
                    #supportsAllDrives: supportsAllDrives,
                    #supportsTeamDrives: supportsTeamDrives,
                    #useContentAsIndexableText: useContentAsIndexableText,
                    #$fields: $fields,
                    #uploadOptions: uploadOptions,
                    #uploadMedia: uploadMedia,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i4.File>);

  @override
  _i7.Future<void> delete(
    String? fileId, {
    bool? enforceSingleParent,
    bool? supportsAllDrives,
    bool? supportsTeamDrives,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [fileId],
              {
                #enforceSingleParent: enforceSingleParent,
                #supportsAllDrives: supportsAllDrives,
                #supportsTeamDrives: supportsTeamDrives,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> emptyTrash({
    String? driveId,
    bool? enforceSingleParent,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#emptyTrash, [], {
              #driveId: driveId,
              #enforceSingleParent: enforceSingleParent,
              #$fields: $fields,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i10.Media?> export(
    String? fileId,
    String? mimeType, {
    String? $fields,
    _i10.DownloadOptions? downloadOptions = _i10.DownloadOptions.metadata,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #export,
              [fileId, mimeType],
              {#$fields: $fields, #downloadOptions: downloadOptions},
            ),
            returnValue: _i7.Future<_i10.Media?>.value(),
          )
          as _i7.Future<_i10.Media?>);

  @override
  _i7.Future<_i4.GeneratedIds> generateIds({
    int? count,
    String? space,
    String? type,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#generateIds, [], {
              #count: count,
              #space: space,
              #type: type,
              #$fields: $fields,
            }),
            returnValue: _i7.Future<_i4.GeneratedIds>.value(
              _FakeGeneratedIds_19(
                this,
                Invocation.method(#generateIds, [], {
                  #count: count,
                  #space: space,
                  #type: type,
                  #$fields: $fields,
                }),
              ),
            ),
          )
          as _i7.Future<_i4.GeneratedIds>);

  @override
  _i7.Future<Object> get(
    String? fileId, {
    bool? acknowledgeAbuse,
    String? includeLabels,
    String? includePermissionsForView,
    bool? supportsAllDrives,
    bool? supportsTeamDrives,
    String? $fields,
    _i10.DownloadOptions? downloadOptions = _i10.DownloadOptions.metadata,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [fileId],
              {
                #acknowledgeAbuse: acknowledgeAbuse,
                #includeLabels: includeLabels,
                #includePermissionsForView: includePermissionsForView,
                #supportsAllDrives: supportsAllDrives,
                #supportsTeamDrives: supportsTeamDrives,
                #$fields: $fields,
                #downloadOptions: downloadOptions,
              },
            ),
            returnValue: _i7.Future<Object>.value(
              _FakeObject_20(
                this,
                Invocation.method(
                  #get,
                  [fileId],
                  {
                    #acknowledgeAbuse: acknowledgeAbuse,
                    #includeLabels: includeLabels,
                    #includePermissionsForView: includePermissionsForView,
                    #supportsAllDrives: supportsAllDrives,
                    #supportsTeamDrives: supportsTeamDrives,
                    #$fields: $fields,
                    #downloadOptions: downloadOptions,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<Object>);

  @override
  _i7.Future<_i4.FileList> list({
    String? corpora,
    String? corpus,
    String? driveId,
    bool? includeItemsFromAllDrives,
    String? includeLabels,
    String? includePermissionsForView,
    bool? includeTeamDriveItems,
    String? orderBy,
    int? pageSize,
    String? pageToken,
    String? q,
    String? spaces,
    bool? supportsAllDrives,
    bool? supportsTeamDrives,
    String? teamDriveId,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#list, [], {
              #corpora: corpora,
              #corpus: corpus,
              #driveId: driveId,
              #includeItemsFromAllDrives: includeItemsFromAllDrives,
              #includeLabels: includeLabels,
              #includePermissionsForView: includePermissionsForView,
              #includeTeamDriveItems: includeTeamDriveItems,
              #orderBy: orderBy,
              #pageSize: pageSize,
              #pageToken: pageToken,
              #q: q,
              #spaces: spaces,
              #supportsAllDrives: supportsAllDrives,
              #supportsTeamDrives: supportsTeamDrives,
              #teamDriveId: teamDriveId,
              #$fields: $fields,
            }),
            returnValue: _i7.Future<_i4.FileList>.value(
              _FakeFileList_21(
                this,
                Invocation.method(#list, [], {
                  #corpora: corpora,
                  #corpus: corpus,
                  #driveId: driveId,
                  #includeItemsFromAllDrives: includeItemsFromAllDrives,
                  #includeLabels: includeLabels,
                  #includePermissionsForView: includePermissionsForView,
                  #includeTeamDriveItems: includeTeamDriveItems,
                  #orderBy: orderBy,
                  #pageSize: pageSize,
                  #pageToken: pageToken,
                  #q: q,
                  #spaces: spaces,
                  #supportsAllDrives: supportsAllDrives,
                  #supportsTeamDrives: supportsTeamDrives,
                  #teamDriveId: teamDriveId,
                  #$fields: $fields,
                }),
              ),
            ),
          )
          as _i7.Future<_i4.FileList>);

  @override
  _i7.Future<_i4.LabelList> listLabels(
    String? fileId, {
    int? maxResults,
    String? pageToken,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #listLabels,
              [fileId],
              {
                #maxResults: maxResults,
                #pageToken: pageToken,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<_i4.LabelList>.value(
              _FakeLabelList_22(
                this,
                Invocation.method(
                  #listLabels,
                  [fileId],
                  {
                    #maxResults: maxResults,
                    #pageToken: pageToken,
                    #$fields: $fields,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i4.LabelList>);

  @override
  _i7.Future<_i4.ModifyLabelsResponse> modifyLabels(
    _i4.ModifyLabelsRequest? request,
    String? fileId, {
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #modifyLabels,
              [request, fileId],
              {#$fields: $fields},
            ),
            returnValue: _i7.Future<_i4.ModifyLabelsResponse>.value(
              _FakeModifyLabelsResponse_23(
                this,
                Invocation.method(
                  #modifyLabels,
                  [request, fileId],
                  {#$fields: $fields},
                ),
              ),
            ),
          )
          as _i7.Future<_i4.ModifyLabelsResponse>);

  @override
  _i7.Future<_i4.File> update(
    _i4.File? request,
    String? fileId, {
    String? addParents,
    bool? enforceSingleParent,
    String? includeLabels,
    String? includePermissionsForView,
    bool? keepRevisionForever,
    String? ocrLanguage,
    String? removeParents,
    bool? supportsAllDrives,
    bool? supportsTeamDrives,
    bool? useContentAsIndexableText,
    String? $fields,
    _i10.UploadOptions? uploadOptions = _i10.UploadOptions.defaultOptions,
    _i10.Media? uploadMedia,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #update,
              [request, fileId],
              {
                #addParents: addParents,
                #enforceSingleParent: enforceSingleParent,
                #includeLabels: includeLabels,
                #includePermissionsForView: includePermissionsForView,
                #keepRevisionForever: keepRevisionForever,
                #ocrLanguage: ocrLanguage,
                #removeParents: removeParents,
                #supportsAllDrives: supportsAllDrives,
                #supportsTeamDrives: supportsTeamDrives,
                #useContentAsIndexableText: useContentAsIndexableText,
                #$fields: $fields,
                #uploadOptions: uploadOptions,
                #uploadMedia: uploadMedia,
              },
            ),
            returnValue: _i7.Future<_i4.File>.value(
              _FakeFile_18(
                this,
                Invocation.method(
                  #update,
                  [request, fileId],
                  {
                    #addParents: addParents,
                    #enforceSingleParent: enforceSingleParent,
                    #includeLabels: includeLabels,
                    #includePermissionsForView: includePermissionsForView,
                    #keepRevisionForever: keepRevisionForever,
                    #ocrLanguage: ocrLanguage,
                    #removeParents: removeParents,
                    #supportsAllDrives: supportsAllDrives,
                    #supportsTeamDrives: supportsTeamDrives,
                    #useContentAsIndexableText: useContentAsIndexableText,
                    #$fields: $fields,
                    #uploadOptions: uploadOptions,
                    #uploadMedia: uploadMedia,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i4.File>);

  @override
  _i7.Future<_i5.$Channel01> watch(
    _i5.$Channel01? request,
    String? fileId, {
    bool? acknowledgeAbuse,
    String? includeLabels,
    String? includePermissionsForView,
    bool? supportsAllDrives,
    bool? supportsTeamDrives,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #watch,
              [request, fileId],
              {
                #acknowledgeAbuse: acknowledgeAbuse,
                #includeLabels: includeLabels,
                #includePermissionsForView: includePermissionsForView,
                #supportsAllDrives: supportsAllDrives,
                #supportsTeamDrives: supportsTeamDrives,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<_i5.$Channel01>.value(
              _Fake$Channel01_24(
                this,
                Invocation.method(
                  #watch,
                  [request, fileId],
                  {
                    #acknowledgeAbuse: acknowledgeAbuse,
                    #includeLabels: includeLabels,
                    #includePermissionsForView: includePermissionsForView,
                    #supportsAllDrives: supportsAllDrives,
                    #supportsTeamDrives: supportsTeamDrives,
                    #$fields: $fields,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i5.$Channel01>);
}

/// A class which mocks [File].
///
/// See the documentation for Mockito's code generation for more information.
class MockFile extends _i1.Mock implements _i4.File {
  MockFile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set appProperties(Map<String, String?>? _appProperties) => super.noSuchMethod(
    Invocation.setter(#appProperties, _appProperties),
    returnValueForMissingStub: null,
  );

  @override
  set capabilities(_i4.FileCapabilities? _capabilities) => super.noSuchMethod(
    Invocation.setter(#capabilities, _capabilities),
    returnValueForMissingStub: null,
  );

  @override
  set contentHints(_i4.FileContentHints? _contentHints) => super.noSuchMethod(
    Invocation.setter(#contentHints, _contentHints),
    returnValueForMissingStub: null,
  );

  @override
  set contentRestrictions(List<_i4.ContentRestriction>? _contentRestrictions) =>
      super.noSuchMethod(
        Invocation.setter(#contentRestrictions, _contentRestrictions),
        returnValueForMissingStub: null,
      );

  @override
  set copyRequiresWriterPermission(bool? _copyRequiresWriterPermission) =>
      super.noSuchMethod(
        Invocation.setter(
          #copyRequiresWriterPermission,
          _copyRequiresWriterPermission,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set createdTime(DateTime? _createdTime) => super.noSuchMethod(
    Invocation.setter(#createdTime, _createdTime),
    returnValueForMissingStub: null,
  );

  @override
  set description(String? _description) => super.noSuchMethod(
    Invocation.setter(#description, _description),
    returnValueForMissingStub: null,
  );

  @override
  set driveId(String? _driveId) => super.noSuchMethod(
    Invocation.setter(#driveId, _driveId),
    returnValueForMissingStub: null,
  );

  @override
  set explicitlyTrashed(bool? _explicitlyTrashed) => super.noSuchMethod(
    Invocation.setter(#explicitlyTrashed, _explicitlyTrashed),
    returnValueForMissingStub: null,
  );

  @override
  set exportLinks(Map<String, String>? _exportLinks) => super.noSuchMethod(
    Invocation.setter(#exportLinks, _exportLinks),
    returnValueForMissingStub: null,
  );

  @override
  set fileExtension(String? _fileExtension) => super.noSuchMethod(
    Invocation.setter(#fileExtension, _fileExtension),
    returnValueForMissingStub: null,
  );

  @override
  set folderColorRgb(String? _folderColorRgb) => super.noSuchMethod(
    Invocation.setter(#folderColorRgb, _folderColorRgb),
    returnValueForMissingStub: null,
  );

  @override
  set fullFileExtension(String? _fullFileExtension) => super.noSuchMethod(
    Invocation.setter(#fullFileExtension, _fullFileExtension),
    returnValueForMissingStub: null,
  );

  @override
  set hasAugmentedPermissions(bool? _hasAugmentedPermissions) =>
      super.noSuchMethod(
        Invocation.setter(#hasAugmentedPermissions, _hasAugmentedPermissions),
        returnValueForMissingStub: null,
      );

  @override
  set hasThumbnail(bool? _hasThumbnail) => super.noSuchMethod(
    Invocation.setter(#hasThumbnail, _hasThumbnail),
    returnValueForMissingStub: null,
  );

  @override
  set headRevisionId(String? _headRevisionId) => super.noSuchMethod(
    Invocation.setter(#headRevisionId, _headRevisionId),
    returnValueForMissingStub: null,
  );

  @override
  set iconLink(String? _iconLink) => super.noSuchMethod(
    Invocation.setter(#iconLink, _iconLink),
    returnValueForMissingStub: null,
  );

  @override
  set id(String? _id) => super.noSuchMethod(
    Invocation.setter(#id, _id),
    returnValueForMissingStub: null,
  );

  @override
  set imageMediaMetadata(_i4.FileImageMediaMetadata? _imageMediaMetadata) =>
      super.noSuchMethod(
        Invocation.setter(#imageMediaMetadata, _imageMediaMetadata),
        returnValueForMissingStub: null,
      );

  @override
  set isAppAuthorized(bool? _isAppAuthorized) => super.noSuchMethod(
    Invocation.setter(#isAppAuthorized, _isAppAuthorized),
    returnValueForMissingStub: null,
  );

  @override
  set kind(String? _kind) => super.noSuchMethod(
    Invocation.setter(#kind, _kind),
    returnValueForMissingStub: null,
  );

  @override
  set labelInfo(_i4.FileLabelInfo? _labelInfo) => super.noSuchMethod(
    Invocation.setter(#labelInfo, _labelInfo),
    returnValueForMissingStub: null,
  );

  @override
  set lastModifyingUser(_i4.User? _lastModifyingUser) => super.noSuchMethod(
    Invocation.setter(#lastModifyingUser, _lastModifyingUser),
    returnValueForMissingStub: null,
  );

  @override
  set linkShareMetadata(_i4.FileLinkShareMetadata? _linkShareMetadata) =>
      super.noSuchMethod(
        Invocation.setter(#linkShareMetadata, _linkShareMetadata),
        returnValueForMissingStub: null,
      );

  @override
  set md5Checksum(String? _md5Checksum) => super.noSuchMethod(
    Invocation.setter(#md5Checksum, _md5Checksum),
    returnValueForMissingStub: null,
  );

  @override
  set mimeType(String? _mimeType) => super.noSuchMethod(
    Invocation.setter(#mimeType, _mimeType),
    returnValueForMissingStub: null,
  );

  @override
  set modifiedByMe(bool? _modifiedByMe) => super.noSuchMethod(
    Invocation.setter(#modifiedByMe, _modifiedByMe),
    returnValueForMissingStub: null,
  );

  @override
  set modifiedByMeTime(DateTime? _modifiedByMeTime) => super.noSuchMethod(
    Invocation.setter(#modifiedByMeTime, _modifiedByMeTime),
    returnValueForMissingStub: null,
  );

  @override
  set modifiedTime(DateTime? _modifiedTime) => super.noSuchMethod(
    Invocation.setter(#modifiedTime, _modifiedTime),
    returnValueForMissingStub: null,
  );

  @override
  set name(String? _name) => super.noSuchMethod(
    Invocation.setter(#name, _name),
    returnValueForMissingStub: null,
  );

  @override
  set originalFilename(String? _originalFilename) => super.noSuchMethod(
    Invocation.setter(#originalFilename, _originalFilename),
    returnValueForMissingStub: null,
  );

  @override
  set ownedByMe(bool? _ownedByMe) => super.noSuchMethod(
    Invocation.setter(#ownedByMe, _ownedByMe),
    returnValueForMissingStub: null,
  );

  @override
  set owners(List<_i4.User>? _owners) => super.noSuchMethod(
    Invocation.setter(#owners, _owners),
    returnValueForMissingStub: null,
  );

  @override
  set parents(List<String>? _parents) => super.noSuchMethod(
    Invocation.setter(#parents, _parents),
    returnValueForMissingStub: null,
  );

  @override
  set permissionIds(List<String>? _permissionIds) => super.noSuchMethod(
    Invocation.setter(#permissionIds, _permissionIds),
    returnValueForMissingStub: null,
  );

  @override
  set permissions(List<_i4.Permission>? _permissions) => super.noSuchMethod(
    Invocation.setter(#permissions, _permissions),
    returnValueForMissingStub: null,
  );

  @override
  set properties(Map<String, String?>? _properties) => super.noSuchMethod(
    Invocation.setter(#properties, _properties),
    returnValueForMissingStub: null,
  );

  @override
  set quotaBytesUsed(String? _quotaBytesUsed) => super.noSuchMethod(
    Invocation.setter(#quotaBytesUsed, _quotaBytesUsed),
    returnValueForMissingStub: null,
  );

  @override
  set resourceKey(String? _resourceKey) => super.noSuchMethod(
    Invocation.setter(#resourceKey, _resourceKey),
    returnValueForMissingStub: null,
  );

  @override
  set sha1Checksum(String? _sha1Checksum) => super.noSuchMethod(
    Invocation.setter(#sha1Checksum, _sha1Checksum),
    returnValueForMissingStub: null,
  );

  @override
  set sha256Checksum(String? _sha256Checksum) => super.noSuchMethod(
    Invocation.setter(#sha256Checksum, _sha256Checksum),
    returnValueForMissingStub: null,
  );

  @override
  set shared(bool? _shared) => super.noSuchMethod(
    Invocation.setter(#shared, _shared),
    returnValueForMissingStub: null,
  );

  @override
  set sharedWithMeTime(DateTime? _sharedWithMeTime) => super.noSuchMethod(
    Invocation.setter(#sharedWithMeTime, _sharedWithMeTime),
    returnValueForMissingStub: null,
  );

  @override
  set sharingUser(_i4.User? _sharingUser) => super.noSuchMethod(
    Invocation.setter(#sharingUser, _sharingUser),
    returnValueForMissingStub: null,
  );

  @override
  set shortcutDetails(_i4.FileShortcutDetails? _shortcutDetails) =>
      super.noSuchMethod(
        Invocation.setter(#shortcutDetails, _shortcutDetails),
        returnValueForMissingStub: null,
      );

  @override
  set size(String? _size) => super.noSuchMethod(
    Invocation.setter(#size, _size),
    returnValueForMissingStub: null,
  );

  @override
  set spaces(List<String>? _spaces) => super.noSuchMethod(
    Invocation.setter(#spaces, _spaces),
    returnValueForMissingStub: null,
  );

  @override
  set starred(bool? _starred) => super.noSuchMethod(
    Invocation.setter(#starred, _starred),
    returnValueForMissingStub: null,
  );

  @override
  set teamDriveId(String? _teamDriveId) => super.noSuchMethod(
    Invocation.setter(#teamDriveId, _teamDriveId),
    returnValueForMissingStub: null,
  );

  @override
  set thumbnailLink(String? _thumbnailLink) => super.noSuchMethod(
    Invocation.setter(#thumbnailLink, _thumbnailLink),
    returnValueForMissingStub: null,
  );

  @override
  set thumbnailVersion(String? _thumbnailVersion) => super.noSuchMethod(
    Invocation.setter(#thumbnailVersion, _thumbnailVersion),
    returnValueForMissingStub: null,
  );

  @override
  set trashed(bool? _trashed) => super.noSuchMethod(
    Invocation.setter(#trashed, _trashed),
    returnValueForMissingStub: null,
  );

  @override
  set trashedTime(DateTime? _trashedTime) => super.noSuchMethod(
    Invocation.setter(#trashedTime, _trashedTime),
    returnValueForMissingStub: null,
  );

  @override
  set trashingUser(_i4.User? _trashingUser) => super.noSuchMethod(
    Invocation.setter(#trashingUser, _trashingUser),
    returnValueForMissingStub: null,
  );

  @override
  set version(String? _version) => super.noSuchMethod(
    Invocation.setter(#version, _version),
    returnValueForMissingStub: null,
  );

  @override
  set videoMediaMetadata(_i4.FileVideoMediaMetadata? _videoMediaMetadata) =>
      super.noSuchMethod(
        Invocation.setter(#videoMediaMetadata, _videoMediaMetadata),
        returnValueForMissingStub: null,
      );

  @override
  set viewedByMe(bool? _viewedByMe) => super.noSuchMethod(
    Invocation.setter(#viewedByMe, _viewedByMe),
    returnValueForMissingStub: null,
  );

  @override
  set viewedByMeTime(DateTime? _viewedByMeTime) => super.noSuchMethod(
    Invocation.setter(#viewedByMeTime, _viewedByMeTime),
    returnValueForMissingStub: null,
  );

  @override
  set viewersCanCopyContent(bool? _viewersCanCopyContent) => super.noSuchMethod(
    Invocation.setter(#viewersCanCopyContent, _viewersCanCopyContent),
    returnValueForMissingStub: null,
  );

  @override
  set webContentLink(String? _webContentLink) => super.noSuchMethod(
    Invocation.setter(#webContentLink, _webContentLink),
    returnValueForMissingStub: null,
  );

  @override
  set webViewLink(String? _webViewLink) => super.noSuchMethod(
    Invocation.setter(#webViewLink, _webViewLink),
    returnValueForMissingStub: null,
  );

  @override
  set writersCanShare(bool? _writersCanShare) => super.noSuchMethod(
    Invocation.setter(#writersCanShare, _writersCanShare),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Media].
///
/// See the documentation for Mockito's code generation for more information.
class MockMedia extends _i1.Mock implements _i10.Media {
  MockMedia() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Stream<List<int>> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i7.Stream<List<int>>.empty(),
          )
          as _i7.Stream<List<int>>);

  @override
  String get contentType =>
      (super.noSuchMethod(
            Invocation.getter(#contentType),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.getter(#contentType),
            ),
          )
          as String);
}
